{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\src\\\\pages\\\\group\\\\CustomFilter.js\";\n\nimport React from \"react\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport { Button, Row, Col, InputGroupAddon } from \"reactstrap\";\nimport { selectMinTotalMember, selectMaxTotalMember } from \"../../redux/selectors/GroupSelector\";\nimport { connect } from \"react-redux\";\n\nvar CustomFilter = function CustomFilter(props) {\n  return /*#__PURE__*/React.createElement(Formik, {\n    key: Date.parse(new Date()) // fix bug: not-re-render when initialValues changing\n    ,\n    enableReinitialize: true,\n    initialValues: {\n      minTotalMember: props.minTotalMember ? props.minTotalMember : '',\n      maxTotalMember: props.maxTotalMember ? props.maxTotalMember : ''\n    },\n    validationSchema: Yup.object({\n      minTotalMember: Yup.number().positive('Must be greater than 0 and integer').integer('Must be greater than 0 and integer'),\n      maxTotalMember: Yup.number().positive('Must be greater than 0 and integer').integer('Must be greater than 0 and integer')\n    }),\n    onSubmit: function onSubmit(values) {\n      props.handleChangeFilter(values.minTotalMember, values.maxTotalMember);\n    },\n    validateOnChange: true,\n    validateOnBlur: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"filter-border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"filter-border\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Filter\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"Total Member:\")), /*#__PURE__*/React.createElement(Col, {\n    lg: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FastField, {\n    type: \"number\",\n    bsSize: \"lg\",\n    name: \"minTotalMember\",\n    placeholder: \"Min\",\n    component: ReactstrapInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 33\n    }\n  })), \"-\", /*#__PURE__*/React.createElement(Col, {\n    lg: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FastField, {\n    type: \"number\",\n    bsSize: \"lg\",\n    name: \"maxTotalMember\",\n    placeholder: \"Max\",\n    component: ReactstrapInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputGroupAddon, {\n    addonType: \"append\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, \"Filter!\"))))))));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    minTotalMember: selectMinTotalMember(state),\n    maxTotalMember: selectMaxTotalMember(state)\n  };\n};\n\nexport default connect(mapGlobalStateToProps)(CustomFilter);","map":{"version":3,"sources":["D:/VTI/6.Mock Project/Mock/Mock_front-end #2/src/pages/group/CustomFilter.js"],"names":["React","FastField","Form","Formik","ReactstrapInput","Yup","Button","Row","Col","InputGroupAddon","selectMinTotalMember","selectMaxTotalMember","connect","CustomFilter","props","Date","parse","minTotalMember","maxTotalMember","object","number","positive","integer","values","handleChangeFilter","alignItems","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport {\n    Button,\n    Row,\n    Col,\n    InputGroupAddon\n} from \"reactstrap\";\nimport { selectMinTotalMember, selectMaxTotalMember } from \"../../redux/selectors/GroupSelector\";\nimport { connect } from \"react-redux\";\n\nconst CustomFilter = (props) => {\n\n    return (\n        <Formik\n            key={Date.parse(new Date())}    // fix bug: not-re-render when initialValues changing\n            enableReinitialize\n            initialValues={\n                {\n                    minTotalMember: props.minTotalMember ? props.minTotalMember : '',\n                    maxTotalMember: props.maxTotalMember ? props.maxTotalMember : ''\n                }\n            }\n            validationSchema={\n                Yup.object({\n                    minTotalMember: Yup.number()\n                        .positive('Must be greater than 0 and integer')\n                        .integer('Must be greater than 0 and integer'),\n\n                    maxTotalMember: Yup.number()\n                        .positive('Must be greater than 0 and integer')\n                        .integer('Must be greater than 0 and integer'),\n                })\n            }\n\n            onSubmit={\n                values => {\n                    props.handleChangeFilter(\n                        values.minTotalMember,\n                        values.maxTotalMember);\n                }\n            }\n\n            validateOnChange={true}\n            validateOnBlur={true}\n        >\n            <Form>\n                <fieldset className=\"filter-border\">\n                    <legend className=\"filter-border\">Filter</legend>\n                    <div className=\"control-group\">\n                        <Row style={{ alignItems: \"center\" }}>\n                            <Col lg=\"auto\">\n                                <label>Total Member:</label>\n                            </Col>\n                            <Col lg=\"2\">\n                                <FastField\n                                    type=\"number\"\n                                    bsSize=\"lg\"\n                                    name=\"minTotalMember\"\n                                    placeholder=\"Min\"\n                                    component={ReactstrapInput}\n                                />\n                            </Col>\n                            {\"-\"}\n                            <Col lg=\"2\">\n                                <FastField\n                                    type=\"number\"\n                                    bsSize=\"lg\"\n                                    name=\"maxTotalMember\"\n                                    placeholder=\"Max\"\n                                    component={ReactstrapInput}\n                                />\n                            </Col>\n                            <Col xs=\"auto\">\n                                <InputGroupAddon addonType=\"append\" color=\"primary\" >\n                                    <Button type='submit' >Filter!</Button>\n                                </InputGroupAddon>\n                            </Col>\n                        </Row>\n                    </div>\n                </fieldset>\n            </Form>\n        </Formik >\n\n    );\n}\n\nconst mapGlobalStateToProps = state => {\n    return {\n        minTotalMember: selectMinTotalMember(state),\n        maxTotalMember: selectMaxTotalMember(state),\n    };\n};\n\nexport default connect(mapGlobalStateToProps)(CustomFilter);"]},"metadata":{},"sourceType":"module"}