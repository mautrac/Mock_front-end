{"ast":null,"code":"import _toConsumableArray from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\src\\\\pages\\\\user\\\\User.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, Col, Container, Row, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { connect } from \"react-redux\";\nimport { selectUsers, selectPage, selectSize, selectTotalSize, selectSelectedRows } from \"../../redux/selectors/UserSelector\";\nimport { getListUserAction } from \"../../redux/actions/UserActions\";\nimport { updateSelectedRowsAction } from \"../../redux/actions/UserActions\";\nimport UserApi from \"../../api/UserApi\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport CustomSearch from \"./CustomSearch\";\nimport * as Icon from 'react-feather';\nimport { toastr } from \"react-redux-toastr\";\nimport { FastField, Form, Formik } from \"formik\"; // import { ReactstrapInput } from \"reactstrap-formik\";\n// import * as Yup from 'yup';\n\nimport filterFactory, { customFilter } from 'react-bootstrap-table2-filter'; // import { FastField, Form, Formik } from \"formik\";\n// import { ReactstrapInput } from \"reactstrap-formik\";\n// import * as Yup from 'yup';\n// import { toastr } from \"react-redux-toastr\";\n\nvar tableColumns = [{\n  dataField: \"username\",\n  text: \"User name\",\n  sort: true\n}, {\n  dataField: \"email\",\n  text: \"Email\",\n  sort: true\n}, {\n  dataField: \"firstName\",\n  text: \"Frist name\",\n  sort: true\n}, {\n  dataField: \"lastName\",\n  text: \"Last name\",\n  sort: true\n}, {\n  dataField: \"role\",\n  text: \"Role\",\n  sort: true\n}];\n\nvar User = function User(props) {\n  var getListUser = props.getListUserAction;\n  var size = props.size;\n  useEffect(function () {\n    var getAllUser = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, users, totalSize;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return UserApi.getAllUsers(1, size);\n\n              case 2:\n                result = _context.sent;\n                users = result.content;\n                totalSize = result.totalElements;\n                getListUser(users, 1, totalSize);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllUser();\n  }, [getListUser, size]);\n\n  var handleTableChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, _ref2) {\n      var page, sizePerPage, sortField, sortOrder, searchText, result, users, totalSize;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              page = _ref2.page, sizePerPage = _ref2.sizePerPage, sortField = _ref2.sortField, sortOrder = _ref2.sortOrder, searchText = _ref2.searchText;\n\n              //sort\n              if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\n                sortField = 'id';\n                sortOrder = 'desc';\n              } // // filter\n              // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\n              // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\n              // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\n              //get data from api\n\n\n              _context2.next = 4;\n              return UserApi.getAllUsers(page, size, sortField, sortOrder, searchText);\n\n            case 4:\n              result = _context2.sent;\n              users = result.content;\n              totalSize = result.totalElements; //update group data to store\n\n              getListUser(users, page, totalSize);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleTableChange(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // filter component visibility\n  // const [isVisiableFilter, setVisiableFilter] = useState(false);\n  // const handleChangeFilter = (minTotalMember, maxTotalMember) => {\n  //   onTotalMemberFilter({\n  //     minTotalMember,\n  //     maxTotalMember\n  //   });\n  // }\n  // create\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModalDelete = _useState2[0],\n      setOpenModalDelete = _useState2[1]; // refresh form\n\n\n  var refreshForm = function refreshForm() {\n    // refresh selected rows\n    props.updateSelectedRowsAction([]); //refresh table \n\n    handleTableChange(null, {\n      page: 1,\n      sortField: null,\n      sortOrder: null,\n      searchText: null,\n      filters: null\n    });\n  };\n\n  var showSuccessNotification = function showSuccessNotification(title, message) {\n    var options = {\n      timeOut: 3000,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.success(title, message, options);\n  };\n\n  var showErrorNotification = function showErrorNotification(title, message) {\n    var options = {\n      timeOut: 3000,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.error(title, message, options);\n  }; //handle select row\n\n\n  var handleOnSelect = function handleOnSelect(row, isSelect) {\n    var selected = props.selectedRows;\n\n    if (isSelect) {\n      selected = [].concat(_toConsumableArray(props.selectedRows), [row.id]);\n    } else {\n      selected = props.selectedRows.filter(function (x) {\n        return x !== row.id;\n      });\n    }\n\n    console.log(selected);\n    props.updateSelectedRowsAction(selected);\n  }; //handle select all rows\n\n\n  var handleOnSelectAll = function handleOnSelectAll(isSelect, rows) {\n    var selected = props.selectedRows;\n    var ids = rows.map(function (r) {\n      return r.id;\n    });\n\n    if (isSelect) {\n      selected = ids;\n    } else {\n      selected = [];\n    }\n\n    console.log(selected);\n    props.updateSelectedRowsAction(selected);\n  };\n\n  var deleteUser = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(props.selectedRows.length !== 0)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.prev = 1;\n              _context3.next = 4;\n              return UserApi.deleteByIds(props.selectedRows);\n\n            case 4:\n              showSuccessNotification(\"Delete Group\", \"Delete Group Successfully!\");\n              refreshForm();\n              _context3.next = 12;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0); // redirect page error server\n\n              props.history.push(\"/auth/500\");\n\n            case 12:\n              _context3.next = 15;\n              break;\n\n            case 14:\n              showErrorNotification(\"Delete Group\", \"You must select groups\");\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function deleteUser() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, \"Admin Management\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: props.users,\n    columns: tableColumns,\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, function (toolkitprops) {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      lg: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CustomSearch, Object.assign({}, toolkitprops.searchProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      lg: \"9\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right pull-right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon.RefreshCcw, {\n      type: \"button\",\n      className: \"align-middle mr-3\",\n      size: 24,\n      onClick: refreshForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Icon.PlusCircle, {\n      type: \"button\",\n      className: \"align-middle mr-3\",\n      size: 24,\n      onClick: function onClick() {\n        if (props.selectedRows.length !== 0) {\n          setOpenModalDelete(true);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Icon.Trash2, {\n      type: \"button\",\n      className: \"align-middle mr-3\",\n      size: 24,\n      onClick: deleteUser,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, toolkitprops.baseProps, {\n      striped: true,\n      hover: true,\n      remote: true,\n      bootstrap4: true,\n      bordered: true,\n      pagination: paginationFactory({\n        page: props.page,\n        sizePerPage: props.size,\n        totalSize: props.totalSize,\n        nextPageText: 'Next',\n        prePageText: 'Prev',\n        // withFirstAndLast: false,\n        alwaysShowAllBtns: true,\n        hideSizePerPage: true\n      }),\n      selectRow: {\n        mode: 'checkbox',\n        clickToSelect: true,\n        selected: props.selectedRows,\n        onSelect: handleOnSelect,\n        onSelectAll: handleOnSelectAll\n      },\n      onTableChange: handleTableChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 15\n      }\n    })));\n  }))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModalDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    onSubmit: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(props.selectedRows.length !== 0)) {\n                _context4.next = 15;\n                break;\n              }\n\n              _context4.prev = 1;\n              _context4.next = 4;\n              return UserApi.deleteByIds(props.selectedRows);\n\n            case 4:\n              setOpenModalDelete(false);\n              showSuccessNotification(\"Delete Group\", \"Delete Group Successfully!\");\n              refreshForm();\n              _context4.next = 13;\n              break;\n\n            case 9:\n              _context4.prev = 9;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(_context4.t0); // redirect page error server\n\n              props.history.push(\"/auth/500\");\n\n            case 13:\n              _context4.next = 17;\n              break;\n\n            case 15:\n              setOpenModalDelete(false);\n              showErrorNotification(\"Delete Group\", \"You must select groups\");\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 9]]);\n    })),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, function (_ref6) {\n    var isSubmitting = _ref6.isSubmitting;\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, \"Delete User\"), /*#__PURE__*/React.createElement(ModalBody, {\n      className: \"m-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        alignItems: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }\n    }, \"B\\u1EA1n c\\xF3 ch\\u1EAFc ch\\u1EAFn mu\\u1ED1n x\\xF3a kh\\xF4ng ?\"))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    }, \"X\\xF3a\"), \" \", /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: function onClick() {\n        return setOpenModalDelete(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, \"H\\u1EE7y\")));\n  })));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    users: selectUsers(state),\n    page: selectPage(state),\n    size: selectSize(state),\n    totalSize: selectTotalSize(state),\n    selectedRows: selectSelectedRows(state)\n  };\n};\n\nexport default connect(mapGlobalStateToProps, {\n  getListUserAction: getListUserAction,\n  updateSelectedRowsAction: updateSelectedRowsAction\n})(User);","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/src/pages/user/User.js"],"names":["React","useEffect","useState","Button","Card","CardBody","Col","Container","Row","Modal","ModalBody","ModalFooter","ModalHeader","BootstrapTable","paginationFactory","connect","selectUsers","selectPage","selectSize","selectTotalSize","selectSelectedRows","getListUserAction","updateSelectedRowsAction","UserApi","ToolkitProvider","CustomSearch","Icon","toastr","FastField","Form","Formik","filterFactory","customFilter","tableColumns","dataField","text","sort","User","props","getListUser","size","getAllUser","getAllUsers","result","users","content","totalSize","totalElements","handleTableChange","type","page","sizePerPage","sortField","sortOrder","searchText","undefined","isOpenModalDelete","setOpenModalDelete","refreshForm","filters","showSuccessNotification","title","message","options","timeOut","showCloseButton","progressBar","position","success","showErrorNotification","error","handleOnSelect","row","isSelect","selected","selectedRows","id","filter","x","console","log","handleOnSelectAll","rows","ids","map","r","deleteUser","length","deleteByIds","history","push","toolkitprops","alignItems","searchProps","baseProps","nextPageText","prePageText","alwaysShowAllBtns","hideSizePerPage","mode","clickToSelect","onSelect","onSelectAll","isSubmitting","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Row,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectUsers,selectPage,selectSize,selectTotalSize,selectSelectedRows } from \"../../redux/selectors/UserSelector\";\r\nimport {getListUserAction} from \"../../redux/actions/UserActions\";\r\nimport { updateSelectedRowsAction } from \"../../redux/actions/UserActions\";\r\nimport UserApi from \"../../api/UserApi\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport CustomSearch from \"./CustomSearch\";\r\nimport * as Icon from 'react-feather';\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { FastField, Form, Formik } from \"formik\";\r\n// import { ReactstrapInput } from \"reactstrap-formik\";\r\n// import * as Yup from 'yup';\r\n\r\n\r\nimport filterFactory, { customFilter } from 'react-bootstrap-table2-filter';\r\n// import { FastField, Form, Formik } from \"formik\";\r\n// import { ReactstrapInput } from \"reactstrap-formik\";\r\n// import * as Yup from 'yup';\r\n// import { toastr } from \"react-redux-toastr\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    dataField: \"username\",\r\n    text: \"User name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"email\",\r\n    text: \"Email\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"firstName\",\r\n    text: \"Frist name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"lastName\",\r\n    text: \"Last name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"role\",\r\n    text: \"Role\",\r\n    sort: true\r\n  }\r\n];\r\n\r\n\r\nconst User = (props) =>{\r\n  const getListUser = props.getListUserAction;\r\n  const size = props.size;\r\n  useEffect(() =>{\r\n    const getAllUser = async() =>{\r\n      const result = await UserApi.getAllUsers(1, size);\r\n      const users = result.content;\r\n      const totalSize = result.totalElements;\r\n      getListUser(users,1,totalSize);\r\n    }\r\n    getAllUser();\r\n  },[getListUser,size]);\r\n\r\n  const handleTableChange = async (type, { page ,sizePerPage,sortField, sortOrder, searchText }) => {\r\n    //sort\r\n    if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\r\n      sortField = 'id'\r\n      sortOrder = 'desc';\r\n    }\r\n  \r\n    // // filter\r\n    // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\r\n    // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\r\n    // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\r\n  \r\n    //get data from api\r\n    const result = await UserApi.getAllUsers(page, size,sortField,sortOrder, searchText);\r\n    const users = result.content;\r\n    const totalSize = result.totalElements;\r\n    //update group data to store\r\n    getListUser(users, page, totalSize);\r\n  }\r\n  \r\n    // filter component visibility\r\n    // const [isVisiableFilter, setVisiableFilter] = useState(false);\r\n\r\n    // const handleChangeFilter = (minTotalMember, maxTotalMember) => {\r\n    //   onTotalMemberFilter({\r\n    //     minTotalMember,\r\n    //     maxTotalMember\r\n    //   });\r\n    // }\r\n\r\n\r\n  // create\r\n  const [isOpenModalDelete, setOpenModalDelete] = useState(false);\r\n\r\n\r\n  // refresh form\r\n  const refreshForm = () => {\r\n    // refresh selected rows\r\n    props.updateSelectedRowsAction([]);\r\n\r\n    //refresh table \r\n    handleTableChange(null,\r\n      {\r\n        page: 1,\r\n        sortField: null,\r\n        sortOrder: null,\r\n        searchText: null,\r\n        filters: null\r\n      }\r\n    );\r\n  }\r\n\r\n    const showSuccessNotification = (title, message) => {\r\n      const options = {\r\n        timeOut: 3000,\r\n        showCloseButton: false,\r\n        progressBar: false,\r\n        position: \"top-right\"\r\n      };\r\n  \r\n      // show notification\r\n      toastr.success(title, message, options);\r\n    }\r\n  \r\n    const showErrorNotification = (title, message) => {\r\n      const options = {\r\n        timeOut: 3000,\r\n        showCloseButton: false,\r\n        progressBar: false,\r\n        position: \"top-right\"\r\n      };\r\n  \r\n      // show notification\r\n      toastr.error(title, message, options);\r\n    }\r\n\r\n     //handle select row\r\n  const handleOnSelect = (row, isSelect) => {\r\n\r\n    let selected = props.selectedRows;\r\n \r\n    if (isSelect) {\r\n      selected = [...props.selectedRows, row.id]\r\n    } else {\r\n      selected = props.selectedRows.filter(x => x !== row.id)\r\n    }\r\n    console.log(selected);\r\n    props.updateSelectedRowsAction(selected);\r\n  }\r\n\r\n  //handle select all rows\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n\r\n    let selected = props.selectedRows;\r\n\r\n    const ids = rows.map(r => r.id);\r\n    if (isSelect) {\r\n      selected = ids\r\n    } else {\r\n      selected = []\r\n    }\r\n    console.log(selected);\r\n\r\n    props.updateSelectedRowsAction(selected);\r\n  }\r\n  const deleteUser = async () => {\r\n    if (props.selectedRows.length !== 0) {\r\n      try {\r\n        await UserApi.deleteByIds(props.selectedRows);\r\n        showSuccessNotification(\r\n          \"Delete Group\",\r\n          \"Delete Group Successfully!\");\r\n        refreshForm();\r\n      } catch (error) {\r\n        console.log(error);\r\n        // redirect page error server\r\n        props.history.push(\"/auth/500\");\r\n      }\r\n    } else {\r\n      showErrorNotification(\r\n        \"Delete Group\",\r\n        \"You must select groups\"\r\n      );\r\n    }\r\n  }\r\n   return (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Admin Management</h1>\r\n\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          \r\n          <CardBody>\r\n          <ToolkitProvider\r\n          keyField=\"id\"\r\n          data={props.users}\r\n          columns={tableColumns}\r\n          search\r\n        >\r\n          {\r\n            toolkitprops => (\r\n            <React.Fragment>\r\n               {/* Filter */}\r\n               {\r\n              //   isVisiableFilter &&\r\n              //   <Row>\r\n              //     <Col lg=\"12\">\r\n              //       <CustomFilter handleChangeFilter={handleChangeFilter} />\r\n              //     </Col>\r\n              //   </Row>\r\n              }\r\n              {/* Search */}\r\n              <Row style={{ alignItems: \"center\" }}>\r\n                <Col lg=\"3\">\r\n                  <CustomSearch {...toolkitprops.searchProps} />\r\n                </Col>\r\n                <Col lg=\"9\">\r\n                  <div className=\"float-right pull-right\">\r\n                    <Icon.RefreshCcw type=\"button\" className=\"align-middle mr-3\" size={24} onClick={refreshForm}/>\r\n                    <Icon.PlusCircle type=\"button\" className=\"align-middle mr-3\" size={24} onClick={() => {if(props.selectedRows.length !== 0){setOpenModalDelete(true)}}}/>\r\n                    <Icon.Trash2 type=\"button\" className=\"align-middle mr-3\" size={24} onClick={deleteUser}/>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <BootstrapTable\r\n              {...toolkitprops.baseProps}\r\n              striped\r\n              hover\r\n              remote\r\n              bootstrap4\r\n              bordered={true}\r\n              pagination={paginationFactory({\r\n                page: props.page,\r\n                sizePerPage: props.size,\r\n                totalSize: props.totalSize,\r\n\r\n                nextPageText:'Next',\r\n                prePageText:'Prev',\r\n                // withFirstAndLast: false,\r\n                alwaysShowAllBtns: true,\r\n                hideSizePerPage:true\r\n              })}\r\n              selectRow={{\r\n                mode: 'checkbox',\r\n                clickToSelect: true,\r\n                selected: props.selectedRows,\r\n                onSelect: handleOnSelect,\r\n                onSelectAll: handleOnSelectAll\r\n              }}\r\n              onTableChange={handleTableChange}\r\n            />\r\n            </React.Fragment>\r\n            )\r\n          }\r\n        </ToolkitProvider>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    \r\n    <Modal isOpen={isOpenModalDelete}>\r\n    <Formik\r\n\r\n      onSubmit={\r\n        async () => {\r\n          if (props.selectedRows.length !== 0) {\r\n            try {\r\n              await UserApi.deleteByIds(props.selectedRows);\r\n              setOpenModalDelete(false);\r\n              showSuccessNotification(\r\n                \"Delete Group\",\r\n                \"Delete Group Successfully!\");\r\n              \r\n              refreshForm();\r\n            } catch (error) {\r\n              console.log(error);\r\n              // redirect page error server\r\n              props.history.push(\"/auth/500\");\r\n            }\r\n          } else {\r\n            setOpenModalDelete(false);\r\n            showErrorNotification(\r\n              \"Delete Group\",\r\n              \"You must select groups\"\r\n            );\r\n\r\n          }\r\n        }\r\n      }\r\n      validateOnChange={false}\r\n      validateOnBlur={false}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          {/* header */}\r\n          <ModalHeader>Delete User</ModalHeader>\r\n\r\n          {/* body */}\r\n          <ModalBody className=\"m-3\">\r\n\r\n            <div style={{ alignItems: \"center\" }}>\r\n                <h2>Bạn có chắc chắn muốn xóa không ?</h2>\r\n            </div>\r\n\r\n          </ModalBody>\r\n\r\n          {/* footer */}\r\n          <ModalFooter>\r\n            <Button type=\"submit\" color=\"primary\" disabled={isSubmitting}>\r\n              Xóa\r\n            </Button>{\" \"}\r\n\r\n            <Button color=\"primary\" onClick={() => setOpenModalDelete(false)}>\r\n              Hủy\r\n            </Button>\r\n          </ModalFooter>\r\n        </Form>\r\n      )}\r\n    </Formik >\r\n  </Modal>\r\n\r\n\r\n\r\n  </Container>\r\n)};\r\nconst mapGlobalStateToProps = state => {\r\n  return {\r\n    users: selectUsers(state),\r\n    page: selectPage(state),\r\n    size: selectSize(state),\r\n    totalSize: selectTotalSize(state),\r\n    selectedRows: selectSelectedRows(state),\r\n  };\r\n};\r\nexport default connect(mapGlobalStateToProps,{getListUserAction,updateSelectedRowsAction})(User);\r\n "]},"metadata":{},"sourceType":"module"}