{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\src\\\\pages\\\\user\\\\User.js\";\n\nimport React, { useEffect } from \"react\";\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { connect } from \"react-redux\";\nimport { selectUsers, selectPage, selectSize, selectTotalSize } from \"../../redux/selectors/UserSelector\";\nimport { getListUserAction } from \"../../redux/actions/UserActions\";\nimport UserApi from \"../../api/UserApi\";\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\nimport * as Icon from 'react-feather'; // import filterFactory, { customFilter } from 'react-bootstrap-table2-filter';\n// import { FastField, Form, Formik } from \"formik\";\n// import { ReactstrapInput } from \"reactstrap-formik\";\n// import * as Yup from 'yup';\n// import { toastr } from \"react-redux-toastr\";\n\nvar tableColumns = [{\n  dataField: \"username\",\n  text: \"User name\",\n  sort: true\n}, {\n  dataField: \"email\",\n  text: \"Email\",\n  sort: true\n}, {\n  dataField: \"firstName\",\n  text: \"Frist name\",\n  sort: true\n}, {\n  dataField: \"lastName\",\n  text: \"Last name\",\n  sort: true\n}, {\n  dataField: \"role\",\n  text: \"Role\",\n  sort: true\n}];\n\nvar User = function User(props) {\n  var getListUser = props.getListUserAction;\n  var size = props.size;\n  useEffect(function () {\n    var getAllUser = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result, users, totalSize;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return UserApi.getAllUsers(1, size);\n\n              case 2:\n                result = _context.sent;\n                users = result.content;\n                totalSize = result.totalElements;\n                console.log(users);\n                getListUser(users, 1, totalSize);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllUser() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllUser();\n  }, [getListUser, size]);\n\n  var handleTableChange = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, _ref2) {\n      var page, sizePerPage, sortField, sortOrder, result, users, totalSize;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              page = _ref2.page, sizePerPage = _ref2.sizePerPage, sortField = _ref2.sortField, sortOrder = _ref2.sortOrder;\n\n              //sort\n              if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\n                sortField = 'id';\n                sortOrder = 'desc';\n              } // // filter\n              // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\n              // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\n              // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\n              //get data from api\n\n\n              _context2.next = 4;\n              return UserApi.getAllUsers(page, size, sortField, sortOrder);\n\n            case 4:\n              result = _context2.sent;\n              users = result.content;\n              totalSize = result.totalElements; //update group data to store\n\n              getListUser(users, page, totalSize);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleTableChange(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"Admin Management\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolkitProvider, {\n    keyField: \"id\",\n    data: props.users,\n    columns: tableColumns,\n    search: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, function (toolkitprops) {\n    return [/*#__PURE__*/React.createElement(BootstrapTable, {\n      striped: true,\n      hover: true,\n      remote: true,\n      bootstrap4: true,\n      bordered: true,\n      pagination: paginationFactory({\n        page: props.page,\n        sizePerPage: props.size,\n        totalSize: props.totalSize,\n        nextPageText: 'Next',\n        prePageText: 'Prev',\n        // withFirstAndLast: false,\n        alwaysShowAllBtns: true,\n        hideSizePerPage: true\n      }),\n      onTableChange: handleTableChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })];\n  }))))));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    users: selectUsers(state),\n    page: selectPage(state),\n    size: selectSize(state),\n    totalSize: selectTotalSize(state) // selectedRows: selectSelectedRows(state)\n\n  };\n};\n\nexport default connect(mapGlobalStateToProps, {\n  getListUserAction: getListUserAction\n})(User);","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/src/pages/user/User.js"],"names":["React","useEffect","Card","CardBody","Col","Container","Row","BootstrapTable","paginationFactory","connect","selectUsers","selectPage","selectSize","selectTotalSize","getListUserAction","UserApi","ToolkitProvider","Icon","tableColumns","dataField","text","sort","User","props","getListUser","size","getAllUser","getAllUsers","result","users","content","totalSize","totalElements","console","log","handleTableChange","type","page","sizePerPage","sortField","sortOrder","undefined","toolkitprops","nextPageText","prePageText","alwaysShowAllBtns","hideSizePerPage","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Row\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectUsers,selectPage,selectSize,selectTotalSize } from \"../../redux/selectors/UserSelector\";\r\nimport {getListUserAction} from \"../../redux/actions/UserActions\";\r\nimport UserApi from \"../../api/UserApi\";\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport * as Icon from 'react-feather';\r\n\r\n// import filterFactory, { customFilter } from 'react-bootstrap-table2-filter';\r\n// import { FastField, Form, Formik } from \"formik\";\r\n// import { ReactstrapInput } from \"reactstrap-formik\";\r\n// import * as Yup from 'yup';\r\n// import { toastr } from \"react-redux-toastr\";\r\n\r\nconst tableColumns = [\r\n  {\r\n    dataField: \"username\",\r\n    text: \"User name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"email\",\r\n    text: \"Email\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"firstName\",\r\n    text: \"Frist name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"lastName\",\r\n    text: \"Last name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"role\",\r\n    text: \"Role\",\r\n    sort: true\r\n  }\r\n];\r\n\r\n\r\n\r\nconst User = (props) =>{\r\n  const getListUser = props.getListUserAction;\r\n  const size = props.size;\r\n  useEffect(() =>{\r\n    const getAllUser = async() =>{\r\n      const result = await UserApi.getAllUsers(1, size);\r\n      const users = result.content;\r\n      const totalSize = result.totalElements;\r\n      console.log(users);\r\n      getListUser(users,1,totalSize);\r\n    }\r\n    getAllUser();\r\n  },[getListUser,size]);\r\n\r\n  const handleTableChange = async (type, { page ,sizePerPage,sortField, sortOrder}) => {\r\n    //sort\r\n    if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\r\n      sortField = 'id'\r\n      sortOrder = 'desc';\r\n    }\r\n  \r\n    // // filter\r\n    // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\r\n    // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\r\n    // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\r\n  \r\n    //get data from api\r\n    const result = await UserApi.getAllUsers(page, size,sortField,sortOrder);\r\n    const users = result.content;\r\n    const totalSize = result.totalElements;\r\n    //update group data to store\r\n    getListUser(users, page, totalSize);\r\n  }\r\n  \r\n\r\n   return (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Admin Management</h1>\r\n\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          \r\n          <CardBody>\r\n          <ToolkitProvider\r\n          keyField=\"id\"\r\n          data={props.users}\r\n          columns={tableColumns}\r\n          search\r\n        >\r\n          {\r\n            toolkitprops => [\r\n\r\n            <BootstrapTable\r\n              striped\r\n              hover\r\n              remote\r\n              bootstrap4\r\n              bordered={true}\r\n              pagination={paginationFactory({\r\n                page: props.page,\r\n                sizePerPage: props.size,\r\n                totalSize: props.totalSize,\r\n\r\n                nextPageText:'Next',\r\n                prePageText:'Prev',\r\n                // withFirstAndLast: false,\r\n                alwaysShowAllBtns: true,\r\n                hideSizePerPage:true\r\n              })}\r\n              onTableChange={handleTableChange}\r\n            />\r\n            ]\r\n          }\r\n        </ToolkitProvider>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n)};\r\nconst mapGlobalStateToProps = state => {\r\n  return {\r\n    users: selectUsers(state),\r\n    page: selectPage(state),\r\n    size: selectSize(state),\r\n    totalSize: selectTotalSize(state)\r\n    // selectedRows: selectSelectedRows(state)\r\n  };\r\n};\r\nexport default connect(mapGlobalStateToProps,{getListUserAction})(User);\r\n "]},"metadata":{},"sourceType":"module"}