{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\src\\\\pages\\\\auth\\\\NewPassword.js\";\n\nimport React from \"react\";\nimport { Button, Card, CardBody, FormGroup } from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport UserApi from \"../../api/UserApi\";\nimport { useParams } from \"react-router-dom\";\nimport { toastr } from \"react-redux-toastr\";\n\nvar NewPassword = function NewPassword(props) {\n  var _useParams = useParams(),\n      token = _useParams.token; // TODO\n  // if(!token){\n  //   props.history.push(\"/auth/sign-in\");\n  // }\n\n\n  var showNotification = function showNotification(title, message) {\n    var options = {\n      timeOut: 3000,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    }; // show notification\n\n    toastr.success(title, message, options);\n  };\n\n  var redirectToLogin = function redirectToLogin() {\n    props.history.push(\"/auth/sign-in\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Enter your new password.\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: Yup.object({\n      password: Yup.string().min(6, 'Must be between 6 and 50 characters').max(50, 'Must be between 6 and 50 characters').required('Required'),\n      confirmPassword: Yup.string().required('Required').when(\"password\", {\n        is: function is(value) {\n          return value && value.length > 0 ? true : false;\n        },\n        then: Yup.string().oneOf([Yup.ref(\"password\")], \"Confirm Password do not match\")\n      })\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return UserApi.resetPassword(token, values.password);\n\n              case 3:\n                // message\n                showNotification(\"Reset Password\", \"Reset Password Successfully!\"); // redirect to login page\n\n                redirectToLogin();\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                // redirect page error server\n                props.history.push(\"/auth/500\");\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Password\",\n      type: \"password\",\n      bsSize: \"lg\",\n      name: \"password\",\n      placeholder: \"Enter new password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Confirm Password\",\n      type: \"password\",\n      bsSize: \"lg\",\n      name: \"confirmPassword\",\n      placeholder: \"Enter confirm new password\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Reset password\"))))));\n  }));\n};\n\nexport default NewPassword;","map":{"version":3,"sources":["D:/VTI/6.Mock Project/Mock/Mock_front-end #2/src/pages/auth/NewPassword.js"],"names":["React","Button","Card","CardBody","FormGroup","FastField","Form","Formik","ReactstrapInput","Yup","UserApi","useParams","toastr","NewPassword","props","token","showNotification","title","message","options","timeOut","showCloseButton","progressBar","position","success","redirectToLogin","history","push","password","confirmPassword","object","string","min","max","required","when","is","value","length","then","oneOf","ref","values","resetPassword","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup\n} from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport UserApi from \"../../api/UserApi\";\nimport { useParams } from \"react-router-dom\";\nimport { toastr } from \"react-redux-toastr\";\n\nconst NewPassword = (props) => {\n\n  const { token } = useParams();\n\n  // TODO\n  // if(!token){\n  //   props.history.push(\"/auth/sign-in\");\n  // }\n\n  const showNotification = (title, message) => {\n    const options = {\n      timeOut: 3000,\n      showCloseButton: false,\n      progressBar: false,\n      position: \"top-right\"\n    };\n\n    // show notification\n    toastr.success(title, message, options);\n  }\n\n  const redirectToLogin = () => {\n    props.history.push(\"/auth/sign-in\");\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"text-center mt-4\">\n        <h1 className=\"h2\">Reset password</h1>\n        <p className=\"lead\">Enter your new password.</p>\n      </div>\n\n      <Formik\n        initialValues={\n          {\n            password: '',\n            confirmPassword: ''\n          }\n        }\n        validationSchema={\n          Yup.object({\n            password: Yup.string()\n              .min(6, 'Must be between 6 and 50 characters')\n              .max(50, 'Must be between 6 and 50 characters')\n              .required('Required'),\n\n            confirmPassword: Yup.string()\n              .required('Required')\n              .when(\"password\", {\n                is: value => (value && value.length > 0 ? true : false),\n                then: Yup.string().oneOf(\n                  [Yup.ref(\"password\")],\n                  \"Confirm Password do not match\"\n                )\n              })\n          })\n        }\n\n        onSubmit={\n          async (values) => {\n            try {\n              // call api\n              await UserApi.resetPassword(token, values.password);\n\n              // message\n              showNotification(\"Reset Password\", \"Reset Password Successfully!\");\n\n              // redirect to login page\n              redirectToLogin();\n\n            } catch (error) {\n              // redirect page error server\n              props.history.push(\"/auth/500\");\n            }\n          }\n        }\n      >\n        {({ isSubmitting }) => (\n          <Card>\n            <CardBody>\n              <div className=\"m-sm-4\">\n                <Form>\n\n                  <FormGroup>\n                    <FastField\n                      label=\"Password\"\n                      type=\"password\"\n                      bsSize=\"lg\"\n                      name=\"password\"\n                      placeholder=\"Enter new password\"\n                      component={ReactstrapInput}\n                    />\n                  </FormGroup>\n\n                  <FormGroup>\n                    <FastField\n                      label=\"Confirm Password\"\n                      type=\"password\"\n                      bsSize=\"lg\"\n                      name=\"confirmPassword\"\n                      placeholder=\"Enter confirm new password\"\n                      component={ReactstrapInput}\n                    />\n                  </FormGroup>\n\n                  <div className=\"text-center mt-3\">\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\n                      Reset password\n                  </Button>\n                  </div>\n                </Form>\n              </div>\n            </CardBody>\n          </Card>\n        )}\n      </Formik>\n    </React.Fragment>\n  )\n};\n\nexport default NewPassword;\n"]},"metadata":{},"sourceType":"module"}