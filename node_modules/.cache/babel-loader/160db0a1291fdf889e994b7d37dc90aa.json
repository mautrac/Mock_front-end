{"ast":null,"code":"import _objectSpread from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as types from \"../constants\";\nvar initialState = {\n  films: [] // page: 2,\n  // size: 7,\n  // totalSize: 0,\n  // selected rows\n  //  selectedRows: []\n\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case types.GET_LIST_FILM:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        films: actions.payload.films // page: actions.payload.page,\n        // // size: actions.payload.size,\n        // totalSize: actions.payload.totalSize\n\n      });\n    // case types.GET_LIST_USER_SELECTED_ROWS:\n    //   return{\n    //     ...state,\n    //     selectedRows: actions.payload,\n    //   };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/src/redux/reducers/FilmReducer.js"],"names":["types","initialState","films","reducer","state","actions","type","GET_LIST_FILM","payload"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,cAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY,CAEnB;AACA;AACA;AAEC;AACD;;AAPmB,CAArB;AAUA,eAAe,SAASC,OAAT,GAAgD;AAAA,MAA/BC,KAA+B,uEAAvBH,YAAuB;AAAA,MAATI,OAAS;;AAC7D,UAAQA,OAAO,CAACC,IAAhB;AACE,SAAKN,KAAK,CAACO,aAAX;AACE,6CACKH,KADL;AAEEF,QAAAA,KAAK,EAAEG,OAAO,CAACG,OAAR,CAAgBN,KAFzB,CAGE;AACA;AACA;;AALF;AAQA;AACA;AACA;AACA;AACA;;AACF;AACE,aAAOE,KAAP;AAhBJ;AAkBD","sourcesContent":["import * as types from \"../constants\";\r\n\r\nconst initialState = {\r\n  films: []\r\n  // page: 2,\r\n  // size: 7,\r\n  // totalSize: 0,\r\n\r\n   // selected rows\r\n  //  selectedRows: []\r\n};\r\n\r\nexport default function reducer(state = initialState, actions) {\r\n  switch (actions.type) {\r\n    case types.GET_LIST_FILM:\r\n      return {\r\n        ...state,\r\n        films: actions.payload.films,\r\n        // page: actions.payload.page,\r\n        // // size: actions.payload.size,\r\n        // totalSize: actions.payload.totalSize\r\n\r\n      };\r\n      // case types.GET_LIST_USER_SELECTED_ROWS:\r\n      //   return{\r\n      //     ...state,\r\n      //     selectedRows: actions.payload,\r\n      //   };\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}