{"ast":null,"code":"import Api from './Api';\nvar url = \"/users\";\n\nvar existsByEmail = function existsByEmail(email) {\n  return Api.get(\"\".concat(url, \"/email/\").concat(email));\n};\n\nvar existsByUsername = function existsByUsername(username) {\n  return Api.get(\"\".concat(url, \"/userName/\").concat(username));\n};\n\nvar existsByUsername2 = function existsByUsername2(id) {\n  return Api.get(\"\".concat(url, \"/\").concat(id));\n};\n\nvar create = function create(firstname, lastname, username, email, password) {\n  var body = {\n    firstName: firstname,\n    lastName: lastname,\n    userName: username,\n    email: email,\n    password: password\n  };\n  return Api.post(url, body);\n};\n\nvar resendEmailToActiveAccount = function resendEmailToActiveAccount(email) {\n  var parameters = {\n    email: email\n  };\n  return Api.get(\"\".concat(url, \"/userRegistrationConfirmRequest\"), {\n    params: parameters\n  });\n};\n\nvar requestResetPassword = function requestResetPassword(email) {\n  var parameters = {\n    email: email\n  };\n  return Api.get(\"\".concat(url, \"/resetPasswordRequest\"), {\n    params: parameters\n  });\n};\n\nvar resendEmailToResetpassword = function resendEmailToResetpassword(email) {\n  var parameters = {\n    email: email\n  };\n  return Api.get(\"\".concat(url, \"/resendResetPassword\"), {\n    params: parameters\n  });\n};\n\nvar resetPassword = function resetPassword(token, newPassword) {\n  var parameters = {\n    token: token,\n    newPassword: newPassword\n  };\n  return Api.get(\"\".concat(url, \"/resetPassword\"), {\n    params: parameters\n  });\n};\n\nvar getProfile = function getProfile() {\n  return Api.get(\"\".concat(url, \"/profile\"));\n};\n\nvar updateProfile = function updateProfile(avatarUrl) {\n  var body = {\n    avatarUrl: avatarUrl\n  };\n  return Api.put(\"\".concat(url, \"/profile\"), body);\n};\n\nvar createAccountFromAdmin = function createAccountFromAdmin(values) {\n  var body = {\n    firstName: values.firstname,\n    lastName: values.lastname,\n    userName: values.username,\n    email: values.email,\n    password: values.password,\n    role: values.role\n  };\n  return Api.post(url, body);\n}; // export\n\n\nvar api = {\n  updateProfile: updateProfile,\n  getProfile: getProfile,\n  create: create,\n  existsByEmail: existsByEmail,\n  existsByUsername: existsByUsername,\n  resendEmailToActiveAccount: resendEmailToActiveAccount,\n  requestResetPassword: requestResetPassword,\n  resendEmailToResetpassword: resendEmailToResetpassword,\n  resetPassword: resetPassword,\n  createAccountFromAdmin: createAccountFromAdmin\n};\nexport default api;","map":{"version":3,"sources":["F:/vti/reactjs/Lesson_Resource_Registration_Login_CRUD Demo/Frontend/GroupManagementFrontEnd/src/api/UserApi.js"],"names":["Api","url","existsByEmail","email","get","existsByUsername","username","existsByUsername2","id","create","firstname","lastname","password","body","firstName","lastName","userName","post","resendEmailToActiveAccount","parameters","params","requestResetPassword","resendEmailToResetpassword","resetPassword","token","newPassword","getProfile","updateProfile","avatarUrl","put","createAccountFromAdmin","values","role","api"],"mappings":"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","sourcesContent":["import Api from './Api';\r\n\r\nconst url = \"/users\";\r\n\r\nconst existsByEmail = (email) => {\r\n    return Api.get(`${url}/email/${email}`);\r\n};\r\n\r\nconst existsByUsername = (username) => {\r\n    return Api.get(`${url}/userName/${username}`);\r\n};\r\n\r\nconst existsByUsername2 = (id) => {\r\n    return Api.get(`${url}/${id}`);\r\n};\r\n\r\nconst create = (firstname, lastname, username, email, password) => {\r\n\r\n    const body = {\r\n        firstName: firstname,\r\n        lastName: lastname,\r\n        userName: username,\r\n        email: email,\r\n        password: password\r\n    }\r\n\r\n    return Api.post(url, body);\r\n};\r\n\r\nconst resendEmailToActiveAccount = (email) => {\r\n\r\n    const parameters = {\r\n        email: email\r\n    }\r\n\r\n    return Api.get(`${url}/userRegistrationConfirmRequest`, { params: parameters });\r\n};\r\n\r\nconst requestResetPassword = (email) => {\r\n\r\n    const parameters = {\r\n        email: email\r\n    }\r\n\r\n    return Api.get(`${url}/resetPasswordRequest`, { params: parameters });\r\n};\r\n\r\nconst resendEmailToResetpassword = (email) => {\r\n\r\n    const parameters = {\r\n        email: email\r\n    }\r\n\r\n    return Api.get(`${url}/resendResetPassword`, { params: parameters });\r\n};\r\n\r\nconst resetPassword = (token, newPassword) => {\r\n\r\n    const parameters = {\r\n        token: token,\r\n        newPassword: newPassword\r\n    }\r\n\r\n    return Api.get(`${url}/resetPassword`, { params: parameters });\r\n};\r\n\r\nconst getProfile = () => {\r\n    return Api.get(`${url}/profile`);\r\n};\r\n\r\nconst updateProfile = (avatarUrl) => {\r\n\r\n    const body = {\r\n        avatarUrl: avatarUrl\r\n    }\r\n\r\n    return Api.put(`${url}/profile`, body);\r\n};\r\n\r\nconst createAccountFromAdmin = (values) => {\r\n\r\n    const body = {\r\n        firstName: values.firstname,\r\n        lastName: values.lastname,\r\n        userName: values.username,\r\n        email: values.email,\r\n        password: values.password,\r\n        role: values.role\r\n    }\r\n\r\n    return Api.post(url, body);\r\n};\r\n\r\n// export\r\nconst api = { updateProfile, getProfile, create, existsByEmail, existsByUsername, resendEmailToActiveAccount, requestResetPassword, resendEmailToResetpassword, resetPassword, createAccountFromAdmin }\r\nexport default api;"]},"metadata":{},"sourceType":"module"}