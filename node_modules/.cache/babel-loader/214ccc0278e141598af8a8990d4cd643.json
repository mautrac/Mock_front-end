{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\r\n * A `Transition` component using CSS transitions and animations.\r\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\r\n *\r\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\r\n * and `exit` stages of the transition. The first class is applied and then a\r\n * second \"active\" class in order to activate the css animation. After the animation,\r\n * matching `done` class names are applied to persist the animation state.\r\n *\r\n * When the `in` prop is toggled to `true` the Component will get\r\n * the `example-enter` CSS class and the `example-enter-active` CSS class\r\n * added in the next tick. This is a convention based on the `classNames` prop.\r\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var _this$getClassNames3 = _this.getClassNames('enter'),\n          doneClassName = _this$getClassNames3.doneClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          className = _this$getClassNames4.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames5.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames6 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames6.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames7 = this.getClassNames(type),\n        className = _this$getClassNames7.className,\n        activeClassName = _this$getClassNames7.activeClassName,\n        doneClassName = _this$getClassNames7.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\r\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\r\n   * A single name can be provided and it will be suffixed for each stage: e.g.\r\n   *\r\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\r\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\r\n   * Each individual classNames can also be specified independently like:\r\n   *\r\n   * ```js\r\n   * classNames={{\r\n   *  appear: 'my-appear',\r\n   *  appearActive: 'my-active-appear',\r\n   *  enter: 'my-enter',\r\n   *  enterActive: 'my-active-enter',\r\n   *  enterDone: 'my-done-enter',\r\n   *  exit: 'my-exit',\r\n   *  exitActive: 'my-active-exit',\r\n   *  exitDone: 'my-done-exit',\r\n   * }}\r\n   * ```\r\n   *\r\n   * If you want to set these classes using CSS Modules:\r\n   *\r\n   * ```js\r\n   * import styles from './styles.css';\r\n   * ```\r\n   *\r\n   * you might want to use camelCase in your CSS file, that way could simply spread\r\n   * them instead of listing them one by one:\r\n   *\r\n   * ```js\r\n   * classNames={{ ...styles }}\r\n   * ```\r\n   *\r\n   * @type {string | {\r\n   *  appear?: string,\r\n   *  appearActive?: string,\r\n   *  enter?: string,\r\n   *  enterActive?: string,\r\n   *  enterDone?: string,\r\n   *  exit?: string,\r\n   *  exitActive?: string,\r\n   *  exitDone?: string,\r\n   * }}\r\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\r\n   * applied.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\n  onEnter: PropTypes.func,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\r\n   * 'appear-active' class is applied.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\n  onEntering: PropTypes.func,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter' or\r\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\n  onEntered: PropTypes.func,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit' class is\r\n   * applied.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\n  onExit: PropTypes.func,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\n  onExiting: PropTypes.func,\n\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit' classes\r\n   * are **removed** and the `exit-done` class is added to the DOM node.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/node_modules/react-bootstrap-table-next/node_modules/react-transition-group/CSSTransition.js"],"names":["exports","__esModule","default","PropTypes","_interopRequireWildcard","require","_addClass","_interopRequireDefault","_removeClass","_react","_Transition","_PropTypes","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_extends","assign","target","i","arguments","length","source","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","addClass","node","classes","split","forEach","c","removeClass","CSSTransition","_React$Component","_this","_len","args","Array","_key","concat","onEnter","appearing","_this$getClassNames","getClassNames","className","removeClasses","props","onEntering","_this$getClassNames2","activeClassName","reflowAndAddClass","onEntered","_this$getClassNames3","doneClassName","onExit","_this$getClassNames4","onExiting","_this$getClassNames5","onExited","_this$getClassNames6","type","classNames","_proto","_this$getClassNames7","scrollTop","render","createElement","Component","propTypes","process","env","NODE_ENV","classNamesShape","func","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.default = void 0;\r\n\r\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\r\n\r\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\r\n\r\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\r\n\r\nvar _react = _interopRequireDefault(require(\"react\"));\r\n\r\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\r\n\r\nvar _PropTypes = require(\"./utils/PropTypes\");\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nvar addClass = function addClass(node, classes) {\r\n  return node && classes && classes.split(' ').forEach(function (c) {\r\n    return (0, _addClass.default)(node, c);\r\n  });\r\n};\r\n\r\nvar removeClass = function removeClass(node, classes) {\r\n  return node && classes && classes.split(' ').forEach(function (c) {\r\n    return (0, _removeClass.default)(node, c);\r\n  });\r\n};\r\n/**\r\n * A `Transition` component using CSS transitions and animations.\r\n * It's inspired by the excellent [ng-animate](http://www.nganimate.org/) library.\r\n *\r\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\r\n * and `exit` stages of the transition. The first class is applied and then a\r\n * second \"active\" class in order to activate the css animation. After the animation,\r\n * matching `done` class names are applied to persist the animation state.\r\n *\r\n * When the `in` prop is toggled to `true` the Component will get\r\n * the `example-enter` CSS class and the `example-enter-active` CSS class\r\n * added in the next tick. This is a convention based on the `classNames` prop.\r\n */\r\n\r\n\r\nvar CSSTransition =\r\n/*#__PURE__*/\r\nfunction (_React$Component) {\r\n  _inheritsLoose(CSSTransition, _React$Component);\r\n\r\n  function CSSTransition() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\r\n\r\n    _this.onEnter = function (node, appearing) {\r\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\r\n          className = _this$getClassNames.className;\r\n\r\n      _this.removeClasses(node, 'exit');\r\n\r\n      addClass(node, className);\r\n\r\n      if (_this.props.onEnter) {\r\n        _this.props.onEnter(node, appearing);\r\n      }\r\n    };\r\n\r\n    _this.onEntering = function (node, appearing) {\r\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\r\n          activeClassName = _this$getClassNames2.activeClassName;\r\n\r\n      _this.reflowAndAddClass(node, activeClassName);\r\n\r\n      if (_this.props.onEntering) {\r\n        _this.props.onEntering(node, appearing);\r\n      }\r\n    };\r\n\r\n    _this.onEntered = function (node, appearing) {\r\n      var _this$getClassNames3 = _this.getClassNames('enter'),\r\n          doneClassName = _this$getClassNames3.doneClassName;\r\n\r\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\r\n\r\n      addClass(node, doneClassName);\r\n\r\n      if (_this.props.onEntered) {\r\n        _this.props.onEntered(node, appearing);\r\n      }\r\n    };\r\n\r\n    _this.onExit = function (node) {\r\n      var _this$getClassNames4 = _this.getClassNames('exit'),\r\n          className = _this$getClassNames4.className;\r\n\r\n      _this.removeClasses(node, 'appear');\r\n\r\n      _this.removeClasses(node, 'enter');\r\n\r\n      addClass(node, className);\r\n\r\n      if (_this.props.onExit) {\r\n        _this.props.onExit(node);\r\n      }\r\n    };\r\n\r\n    _this.onExiting = function (node) {\r\n      var _this$getClassNames5 = _this.getClassNames('exit'),\r\n          activeClassName = _this$getClassNames5.activeClassName;\r\n\r\n      _this.reflowAndAddClass(node, activeClassName);\r\n\r\n      if (_this.props.onExiting) {\r\n        _this.props.onExiting(node);\r\n      }\r\n    };\r\n\r\n    _this.onExited = function (node) {\r\n      var _this$getClassNames6 = _this.getClassNames('exit'),\r\n          doneClassName = _this$getClassNames6.doneClassName;\r\n\r\n      _this.removeClasses(node, 'exit');\r\n\r\n      addClass(node, doneClassName);\r\n\r\n      if (_this.props.onExited) {\r\n        _this.props.onExited(node);\r\n      }\r\n    };\r\n\r\n    _this.getClassNames = function (type) {\r\n      var classNames = _this.props.classNames;\r\n      var className = typeof classNames !== 'string' ? classNames[type] : classNames + '-' + type;\r\n      var activeClassName = typeof classNames !== 'string' ? classNames[type + 'Active'] : className + '-active';\r\n      var doneClassName = typeof classNames !== 'string' ? classNames[type + 'Done'] : className + '-done';\r\n      return {\r\n        className: className,\r\n        activeClassName: activeClassName,\r\n        doneClassName: doneClassName\r\n      };\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = CSSTransition.prototype;\r\n\r\n  _proto.removeClasses = function removeClasses(node, type) {\r\n    var _this$getClassNames7 = this.getClassNames(type),\r\n        className = _this$getClassNames7.className,\r\n        activeClassName = _this$getClassNames7.activeClassName,\r\n        doneClassName = _this$getClassNames7.doneClassName;\r\n\r\n    className && removeClass(node, className);\r\n    activeClassName && removeClass(node, activeClassName);\r\n    doneClassName && removeClass(node, doneClassName);\r\n  };\r\n\r\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\r\n    // This is for to force a repaint,\r\n    // which is necessary in order to transition styles when adding a class name.\r\n    if (className) {\r\n      /* eslint-disable no-unused-expressions */\r\n      node && node.scrollTop;\r\n      /* eslint-enable no-unused-expressions */\r\n\r\n      addClass(node, className);\r\n    }\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var props = _extends({}, this.props);\r\n\r\n    delete props.classNames;\r\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\r\n      onEnter: this.onEnter,\r\n      onEntered: this.onEntered,\r\n      onEntering: this.onEntering,\r\n      onExit: this.onExit,\r\n      onExiting: this.onExiting,\r\n      onExited: this.onExited\r\n    }));\r\n  };\r\n\r\n  return CSSTransition;\r\n}(_react.default.Component);\r\n\r\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\r\n  /**\r\n   * The animation classNames applied to the component as it enters, exits or has finished the transition.\r\n   * A single name can be provided and it will be suffixed for each stage: e.g.\r\n   *\r\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`, `fade-enter-done`,\r\n   * `fade-exit`, `fade-exit-active`, `fade-exit-done`, `fade-appear`, and `fade-appear-active`.\r\n   * Each individual classNames can also be specified independently like:\r\n   *\r\n   * ```js\r\n   * classNames={{\r\n   *  appear: 'my-appear',\r\n   *  appearActive: 'my-active-appear',\r\n   *  enter: 'my-enter',\r\n   *  enterActive: 'my-active-enter',\r\n   *  enterDone: 'my-done-enter',\r\n   *  exit: 'my-exit',\r\n   *  exitActive: 'my-active-exit',\r\n   *  exitDone: 'my-done-exit',\r\n   * }}\r\n   * ```\r\n   *\r\n   * If you want to set these classes using CSS Modules:\r\n   *\r\n   * ```js\r\n   * import styles from './styles.css';\r\n   * ```\r\n   *\r\n   * you might want to use camelCase in your CSS file, that way could simply spread\r\n   * them instead of listing them one by one:\r\n   *\r\n   * ```js\r\n   * classNames={{ ...styles }}\r\n   * ```\r\n   *\r\n   * @type {string | {\r\n   *  appear?: string,\r\n   *  appearActive?: string,\r\n   *  enter?: string,\r\n   *  enterActive?: string,\r\n   *  enterDone?: string,\r\n   *  exit?: string,\r\n   *  exitActive?: string,\r\n   *  exitDone?: string,\r\n   * }}\r\n   */\r\n  classNames: _PropTypes.classNamesShape,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\r\n   * applied.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\r\n   * 'appear-active' class is applied.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'enter' or\r\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit' class is\r\n   * applied.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * A `<Transition>` callback fired immediately after the 'exit' classes\r\n   * are **removed** and the `exit-done` class is added to the DOM node.\r\n   *\r\n   * @type Function(node: HtmlElement)\r\n   */\r\n  onExited: PropTypes.func\r\n}) : {};\r\nvar _default = CSSTransition;\r\nexports.default = _default;\r\nmodule.exports = exports[\"default\"];"]},"metadata":{},"sourceType":"script"}