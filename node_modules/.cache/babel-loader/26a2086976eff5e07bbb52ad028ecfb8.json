{"ast":null,"code":"import Api from './Api';\nvar url = \"/films\";\n\nvar getAllFilm = function getAllFilm() {\n  var search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var parameters = {// page,\n    // size,\n    // sort: `${sortField},${sortType}`\n  }; // search\n\n  if (search) {\n    parameters.search = search;\n  } // // filter\n  // if (minTotalMember !== null && minTotalMember !== undefined) {\n  //     parameters.minTotalMember = minTotalMember;\n  // }\n  // if (maxTotalMember !== null && maxTotalMember !== undefined) {\n  //     parameters.maxTotalMember = maxTotalMember;\n  // }\n\n\n  return Api.get(\"\".concat(url), {\n    params: parameters\n  });\n}; // const existsByName = (name) => {\n//     return Api.get(`${url}/name/${name}`);\n// };\n// const create = (name) => {\n//     const body = {\n//         name\n//     }\n//     return Api.post(url, body);\n// };\n// const getById = (id) => {\n//     return Api.get(`${url}/${id}`);\n// };\n// const update = (id, name, totalMember) => {\n//     const body = {\n//         name,\n//         totalMember\n//     }\n//     return Api.put(`${url}/${id}`, body);\n// };\n// const deleteByIds = (ids) => {\n//     return Api.delete(`${url}/${ids.toString()}`);\n// };\n// export\n\n\nvar api = {\n  getAllFilm: getAllFilm\n};\nexport default api;","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/src/api/FilmApi.js"],"names":["Api","url","getAllFilm","search","parameters","get","params","api"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AAEA,IAAMC,GAAG,GAAG,QAAZ;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAiB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAEhC,MAAMC,UAAU,GAAG,CACf;AACA;AACA;AAHe,GAAnB,CAFgC,CAQhC;;AACA,MAAID,MAAJ,EAAY;AACRC,IAAAA,UAAU,CAACD,MAAX,GAAoBA,MAApB;AACH,GAX+B,CAahC;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,SAAOH,GAAG,CAACK,GAAJ,WAAWJ,GAAX,GAAiB;AAACK,IAAAA,MAAM,EAAEF;AAAT,GAAjB,CAAP;AACH,CAvBD,C,CAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,IAAMG,GAAG,GAAG;AAAEL,EAAAA,UAAU,EAAVA;AAAF,CAAZ;AACA,eAAeK,GAAf","sourcesContent":["import Api from './Api';\r\n\r\nconst url = \"/films\";\r\n\r\nconst getAllFilm = (search = '') => {\r\n\r\n    const parameters = {\r\n        // page,\r\n        // size,\r\n        // sort: `${sortField},${sortType}`\r\n    }\r\n\r\n    // search\r\n    if (search) {\r\n        parameters.search = search;\r\n    }\r\n\r\n    // // filter\r\n    // if (minTotalMember !== null && minTotalMember !== undefined) {\r\n    //     parameters.minTotalMember = minTotalMember;\r\n    // }\r\n\r\n    // if (maxTotalMember !== null && maxTotalMember !== undefined) {\r\n    //     parameters.maxTotalMember = maxTotalMember;\r\n    // }\r\n\r\n    return Api.get(`${url}`,{params: parameters});\r\n};\r\n\r\n// const existsByName = (name) => {\r\n//     return Api.get(`${url}/name/${name}`);\r\n// };\r\n\r\n// const create = (name) => {\r\n\r\n//     const body = {\r\n//         name\r\n//     }\r\n\r\n//     return Api.post(url, body);\r\n// };\r\n\r\n// const getById = (id) => {\r\n//     return Api.get(`${url}/${id}`);\r\n// };\r\n\r\n// const update = (id, name, totalMember) => {\r\n\r\n//     const body = {\r\n//         name,\r\n//         totalMember\r\n//     }\r\n\r\n//     return Api.put(`${url}/${id}`, body);\r\n// };\r\n\r\n// const deleteByIds = (ids) => {\r\n//     return Api.delete(`${url}/${ids.toString()}`);\r\n// };\r\n\r\n// export\r\nconst api = { getAllFilm}\r\nexport default api;"]},"metadata":{},"sourceType":"module"}