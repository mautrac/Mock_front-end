{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\VTI\\\\6.Mock Project\\\\Mock\\\\Mock_front-end #2\\\\src\\\\pages\\\\auth\\\\ResetPassword.js\";\n\nimport React, { useState } from \"react\";\nimport { Button, Card, CardBody, FormGroup, Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport UserApi from \"../../api/UserApi\";\n\nvar ResetPassword = function ResetPassword(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpenModal = _useState2[0],\n      setOpenModal = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isDisableResendButton = _useState6[0],\n      setDisableResendButton = _useState6[1];\n\n  var resendEmailToResetPassword = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setDisableResendButton(true);\n              _context.next = 3;\n              return UserApi.resendEmailToResetpassword(email);\n\n            case 3:\n              setDisableResendButton(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function resendEmailToResetPassword() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var redirectToLogin = function redirectToLogin() {\n    props.history.push(\"/auth/sign-in\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Reset password\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Enter your email to reset your password.\")), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Required').test('checkExistsEmail', 'This email is not exists.', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n          var isExists;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return UserApi.existsByEmail(email);\n\n                case 2:\n                  isExists = _context2.sent;\n                  return _context2.abrupt(\"return\", isExists);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }())\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return UserApi.requestResetPassword(values.email);\n\n              case 3:\n                // message\n                setEmail(values.email);\n                setOpenModal(true);\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                // redirect page error server\n                props.history.push(\"/auth/500\");\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    validateOnChange: false,\n    validateOnBlur: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"m-sm-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FastField, {\n      label: \"Email\",\n      type: \"email\",\n      bsSize: \"lg\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      component: ReactstrapInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center mt-3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      size: \"lg\",\n      disabled: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Reset password\"))))));\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpenModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"You need to confirm reset password\"), /*#__PURE__*/React.createElement(ModalBody, {\n    className: \"m-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"We have sent an email to \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 38\n    }\n  }, email), \".\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Please check your email to reset password\")), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: resendEmailToResetPassword,\n    disabled: isDisableResendButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Resend\"), \" \", /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: redirectToLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Login\"))));\n};\n\nexport default ResetPassword;","map":{"version":3,"sources":["D:/VTI/6.Mock Project/Mock/Mock_front-end #2/src/pages/auth/ResetPassword.js"],"names":["React","useState","Button","Card","CardBody","FormGroup","Modal","ModalBody","ModalFooter","ModalHeader","FastField","Form","Formik","ReactstrapInput","Yup","UserApi","ResetPassword","props","isOpenModal","setOpenModal","email","setEmail","isDisableResendButton","setDisableResendButton","resendEmailToResetPassword","resendEmailToResetpassword","redirectToLogin","history","push","object","string","required","test","existsByEmail","isExists","values","requestResetPassword","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  FormGroup,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from \"reactstrap\";\nimport { FastField, Form, Formik } from \"formik\";\nimport { ReactstrapInput } from \"reactstrap-formik\";\nimport * as Yup from 'yup';\nimport UserApi from \"../../api/UserApi\";\n\nconst ResetPassword = (props) => {\n\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [isDisableResendButton, setDisableResendButton] = useState(false);\n\n  const resendEmailToResetPassword = async () => {\n    setDisableResendButton(true);\n    await UserApi.resendEmailToResetpassword(email);\n    setDisableResendButton(false);\n  }\n\n  const redirectToLogin = () => {\n    props.history.push(\"/auth/sign-in\");\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"text-center mt-4\">\n        <h1 className=\"h2\">Reset password</h1>\n        <p className=\"lead\">Enter your email to reset your password.</p>\n      </div>\n\n      <Formik\n        initialValues={\n          {\n            email: ''\n          }\n        }\n        validationSchema={\n          Yup.object({\n            email: Yup.string()\n              .email('Invalid email address')\n              .required('Required')\n              .test('checkExistsEmail', 'This email is not exists.', async email => {\n                // call api\n                const isExists = await UserApi.existsByEmail(email);\n                return isExists;\n              })\n          })\n        }\n\n        onSubmit={\n          async (values) => {\n            try {\n              // call api\n              await UserApi.requestResetPassword(values.email);\n\n              // message\n              setEmail(values.email);\n              setOpenModal(true);\n\n            } catch (error) {\n              // redirect page error server\n              props.history.push(\"/auth/500\");\n            }\n          }\n        }\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        {({ isSubmitting }) => (\n          <Card>\n            <CardBody>\n              <div className=\"m-sm-4\">\n                <Form>\n\n                  <FormGroup>\n                    <FastField\n                      label=\"Email\"\n                      type=\"email\"\n                      bsSize=\"lg\"\n                      name=\"email\"\n                      placeholder=\"Enter your email\"\n                      component={ReactstrapInput}\n                    />\n                  </FormGroup>\n\n                  <div className=\"text-center mt-3\">\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" disabled={isSubmitting}>\n                      Reset password\n                  </Button>\n                  </div>\n                </Form>\n              </div>\n            </CardBody>\n          </Card>\n        )}\n      </Formik>\n\n      <Modal isOpen={isOpenModal}>\n\n        {/* header */}\n        <ModalHeader>You need to confirm reset password</ModalHeader>\n\n        {/* body */}\n        <ModalBody className=\"m-3\">\n          <p className=\"mb-0\">\n            We have sent an email to <b>{email}</b>.\n        </p>\n          <p className=\"mb-0\">\n            Please check your email to reset password\n        </p>\n        </ModalBody>\n\n        {/* footer */}\n        <ModalFooter>\n          <Button color=\"primary\" onClick={resendEmailToResetPassword} disabled={isDisableResendButton}>\n            Resend\n          </Button>{\" \"}\n\n          <Button color=\"primary\" onClick={redirectToLogin}>\n            Login\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n    </React.Fragment>\n  )\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}