{"ast":null,"code":"import _defineProperty from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\RK31-CODE\\\\MOCK\\\\MOCK2309\\\\Mock2309_Team01_Frontend\\\\Mock_front-end\\\\src\\\\pages\\\\user\\\\User.js\";\n\nimport React, { useEffect } from \"react\";\nimport { Card, CardBody, Col, Container, Row } from \"reactstrap\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { connect } from \"react-redux\";\nimport { selectUsers, selectPage, selectSize, selectTotalSize } from \"../../redux/selectors/UserSelector\";\nimport { getListUserAction } from \"../../redux/actions/UserActions\";\nimport UserApi from \"../../api/UserApi\";\nvar tableColumns = [{\n  dataField: \"username\",\n  text: \"User name\",\n  sort: true\n}, {\n  dataField: \"email\",\n  text: \"Email\",\n  sort: true\n}, {\n  dataField: \"firstName\",\n  text: \"Frist name\",\n  sort: true\n}, {\n  dataField: \"lastName\",\n  text: \"Last name\",\n  sort: true\n}, {\n  dataField: \"role\",\n  text: \"Role\",\n  sort: true\n}];\n\nvar handleTableChange = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, _ref) {\n    var page, sortField, sortOrder, searchText, result, groups, totalSize;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = _ref.page, sortField = _ref.sortField, sortOrder = _ref.sortOrder, searchText = _ref.searchText;\n\n            // sort\n            if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\n              sortField = 'id';\n              sortOrder = 'desc';\n            } // // filter\n            // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\n            // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\n            // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\n            //get data from api\n\n\n            _context.next = 4;\n            return UserApi.getAllUser(page, size, sortField, sortOrder, searchText);\n\n          case 4:\n            result = _context.sent;\n            groups = result.content;\n            totalSize = result.totalElements; //update group data to store\n\n            getListUser(groups, page, totalSize, minTotalMember, maxTotalMember, searchText);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function handleTableChange(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar User = function User(props) {\n  var _paginationFactory;\n\n  var getListUser = props.getListUserAction;\n  useEffect(function () {\n    var getAllUser = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result, users;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return UserApi.getAllUsers();\n\n              case 2:\n                result = _context2.sent;\n                users = result.content;\n                console.log(users);\n                getListUser(users);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getAllUser() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    getAllUser();\n  }, [getListUser]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"p-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h3 mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, \"Admin Management\"), /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    keyField: \"id\",\n    data: props.users,\n    columns: tableColumns,\n    striped: true,\n    hover: true,\n    remote: true,\n    bootstrap4: true,\n    bordered: true,\n    pagination: paginationFactory((_paginationFactory = {\n      page: props.page,\n      sizePerPage: props.size,\n      totalSize: props.totalSize\n    }, _defineProperty(_paginationFactory, \"sizePerPage\", 10), _defineProperty(_paginationFactory, \"sizePerPageList\", [5, 10, 25, 50]), _paginationFactory)),\n    onTableChange: handleTableChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }))))));\n};\n\nvar mapGlobalStateToProps = function mapGlobalStateToProps(state) {\n  return {\n    users: selectUsers(state),\n    page: selectPage(state),\n    size: selectSize(state),\n    totalSize: selectTotalSize(state) // selectedRows: selectSelectedRows(state)\n\n  };\n};\n\nexport default connect(mapGlobalStateToProps, {\n  getListUserAction: getListUserAction\n})(User);","map":{"version":3,"sources":["D:/RK31-CODE/MOCK/MOCK2309/Mock2309_Team01_Frontend/Mock_front-end/src/pages/user/User.js"],"names":["React","useEffect","Card","CardBody","Col","Container","Row","BootstrapTable","paginationFactory","connect","selectUsers","selectPage","selectSize","selectTotalSize","getListUserAction","UserApi","tableColumns","dataField","text","sort","handleTableChange","type","page","sortField","sortOrder","searchText","undefined","getAllUser","size","result","groups","content","totalSize","totalElements","getListUser","minTotalMember","maxTotalMember","User","props","getAllUsers","users","console","log","sizePerPage","mapGlobalStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Container,\r\n  Row\r\n} from \"reactstrap\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectUsers,selectPage,selectSize,selectTotalSize } from \"../../redux/selectors/UserSelector\";\r\nimport {getListUserAction} from \"../../redux/actions/UserActions\";\r\nimport UserApi from \"../../api/UserApi\";\r\n\r\n\r\nconst tableColumns = [\r\n  {\r\n    dataField: \"username\",\r\n    text: \"User name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"email\",\r\n    text: \"Email\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"firstName\",\r\n    text: \"Frist name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"lastName\",\r\n    text: \"Last name\",\r\n    sort: true\r\n  },\r\n  {\r\n    dataField: \"role\",\r\n    text: \"Role\",\r\n    sort: true\r\n  }\r\n];\r\n\r\nconst handleTableChange = async (type, { page, sortField, sortOrder, searchText }) => {\r\n  // sort\r\n  if (sortField === null || sortField === undefined || sortOrder === null || sortOrder === undefined) {\r\n    sortField = 'id'\r\n    sortOrder = 'desc';\r\n  }\r\n\r\n  // // filter\r\n  // const filter = filters && filters.totalMember && filters.totalMember.filterVal ? filters.totalMember.filterVal : null;\r\n  // const minTotalMember = filter && filter.minTotalMember ? filter.minTotalMember : null;\r\n  // const maxTotalMember = filter && filter.maxTotalMember ? filter.maxTotalMember : null;\r\n\r\n  //get data from api\r\n  const result = await UserApi.getAllUser(page, size, sortField, sortOrder, searchText);\r\n  const groups = result.content;\r\n  const totalSize = result.totalElements;\r\n  //update group data to store\r\n  getListUser(groups, page, totalSize, minTotalMember, maxTotalMember, searchText);\r\n}\r\n\r\n\r\nconst User = (props) =>{\r\n  const getListUser = props.getListUserAction;\r\n  useEffect(() =>{\r\n    const getAllUser = async() =>{\r\n      const result = await UserApi.getAllUsers();\r\n      const users = result.content;\r\n      console.log(users);\r\n      getListUser(users);\r\n    }\r\n    getAllUser();\r\n  },[getListUser]);\r\n\r\n   return (\r\n  <Container fluid className=\"p-0\">\r\n    <h1 className=\"h3 mb-3\">Admin Management</h1>\r\n\r\n    <Row>\r\n      <Col>\r\n        <Card>\r\n          \r\n          <CardBody>\r\n            <BootstrapTable\r\n              keyField=\"id\"\r\n              data={props.users}\r\n              columns={tableColumns}\r\n              striped\r\n              hover\r\n              remote\r\n              bootstrap4\r\n              bordered={true}\r\n              pagination={paginationFactory({\r\n                page: props.page,\r\n                sizePerPage: props.size,\r\n                totalSize: props.totalSize,\r\n                sizePerPage: 10,\r\n                sizePerPageList: [5, 10, 25, 50]\r\n              })}\r\n              onTableChange={handleTableChange}\r\n            />\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n)};\r\nconst mapGlobalStateToProps = state => {\r\n  return {\r\n    users: selectUsers(state),\r\n    page: selectPage(state),\r\n    size: selectSize(state),\r\n    totalSize: selectTotalSize(state)\r\n    // selectedRows: selectSelectedRows(state)\r\n  };\r\n};\r\nexport default connect(mapGlobalStateToProps,{getListUserAction})(User);\r\n "]},"metadata":{},"sourceType":"module"}